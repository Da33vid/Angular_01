{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet BodyComponent = class BodyComponent {\n  constructor(productService) {\n    this.productService = productService;\n    this.products = [];\n    this.productnombre = '';\n    this.productapellido1 = '';\n    this.productapellido2 = '';\n    this.productedad = 0;\n    this.productemail = '';\n    this.producttelefono = 0;\n    this.productfechaNacimiento = new Date();\n    this.productciudad = '';\n    this.productgenero = '';\n    this.nombre = new FormControl('', [Validators.required, Validators.maxLength(15)]);\n    this.apellido1 = new FormControl('', [Validators.required, Validators.maxLength(15)]);\n    this.apellido2 = new FormControl('', [Validators.required, Validators.maxLength(15)]);\n    this.edad = new FormControl('', [Validators.required]);\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.telefono = new FormControl('', [Validators.required, Validators.maxLength(9), Validators.minLength(9)]);\n    this.fechaNacimiento = new FormControl('', [Validators.required]);\n    this.ciudad = new FormControl('', [Validators.required, Validators.maxLength(15)]);\n    this.genero = new FormControl('', [Validators.required]);\n    this.terminos = new FormControl('', [Validators.required]);\n    this.MyNewForm = new FormGroup({\n      nombre: this.nombre,\n      apellido1: this.apellido1,\n      apellido2: this.apellido2,\n      edad: this.edad,\n      email: this.email,\n      telefono: this.telefono,\n      fechaNacimiento: this.fechaNacimiento,\n      ciudad: this.ciudad,\n      genero: this.genero,\n      terminos: this.terminos\n    });\n  }\n  ngOnInit() {}\n  Clic(formGroup) {\n    this.productService.sendProducts(this.MyNewForm.value.nombre, this.MyNewForm.value.apellido1, this.MyNewForm.value.apellido2, this.MyNewForm.value.edad, this.MyNewForm.value.email, this.MyNewForm.value.telefono, this.MyNewForm.value.fechaNacimiento, this.MyNewForm.value.ciudad, this.MyNewForm.value.genero);\n    console.log(formGroup);\n  }\n};\nBodyComponent = __decorate([Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css']\n})], BodyComponent);\nexport { BodyComponent };\n// ngOnInit(){}\n// constructor(){}\n// constructor(private FormService:formService){}\n// Clic(Dato:FormGroup) {\n//  console.log(Dato);\n//   }\n// }\n// import { Component, OnInit } from '@angular/core';\n// import { FormGroup, FormControl, Validators } from '@angular/forms';\n// import { FormService } from '../../services/formServices';\n// @Component({\n//   selector: 'app-body',\n//   templateUrl: './body.component.html',\n//   styleUrls: ['./body.component.css']\n// })\n// export class BodyComponent implements OnInit {\n//   MyNewForm: FormGroup;\n//   products:Product[] = [ ];\n//   productName:string = \"\";\n//   productPrice:string = \"\";\n//   constructor(private formService: FormService) {\n//     this.MyNewForm = new FormGroup({\n//       nombre: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       apellido1: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       apellido2: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       edad: new FormControl('', [Validators.required, Validators.min(18), Validators.max(100)]),\n//       email: new FormControl('', [Validators.required, Validators.email]),\n//       telefono: new FormControl('', [Validators.required, Validators.minLength(9), Validators.maxLength(9), Validators.pattern('[0-9]*')]),\n//       fechaNacimiento: new FormControl('', [Validators.required, Validators.pattern('[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}')]),\n//       ciudad: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       genero: new FormControl('', [Validators.required])\n//     });\n//   }\n//   ngOnInit() {\n//     // Aqu√≠ puedes inicializar propiedades o llamar a servicios\n//   }\n//   Clic(formGroup: any) {\n//     this.formService.sendFormData(formGroup);\n//     console.log(formGroup);\n//   }\n// }","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","BodyComponent","constructor","productService","Date","required","maxLength","email","minLength","nombre","apellido1","apellido2","edad","telefono","fechaNacimiento","ciudad","genero","terminos","ngOnInit","Clic","formGroup","sendProducts","MyNewForm","value","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\M6 - Desenvolupament Web en Entorn Client\\angular practica2\\practica02\\src\\app\\body\\body\\body.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../../services/productServices';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css'],\n})\nexport class BodyComponent implements OnInit {\n\n\n  \n  products: Product[] = [];\n  productnombre: string = '';\n  productapellido1: string = '';\n  productapellido2: string = '';\n  productedad: number = 0;\n  productemail: string = '';\n  producttelefono: number = 0;\n  productfechaNacimiento: Date = new Date();\n  productciudad: string = '';\n  productgenero: string = '';\n\n  nombre: FormControl = new FormControl('', [\n\n   Validators.required,\n    Validators.maxLength(15)\n  ]);\n  apellido1: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(15)\n  ]);\n  apellido2: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(15)\n\n  ]);\n  edad: FormControl = new FormControl('', [\n    Validators.required    \n  ]);\n  email: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.email\n  ]);\n  telefono: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(9),\n    Validators.minLength(9)\n\n  ]);\n  fechaNacimiento: FormControl = new FormControl('', [\n    Validators.required\n    \n  ]);\n  ciudad: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(15)\n  ]);\n  genero: FormControl = new FormControl('', [Validators.required]);\n  terminos: FormControl = new FormControl('', [Validators.required]);\n\n\n  MyNewForm: FormGroup = new FormGroup({\n    nombre: this.nombre,\n    apellido1: this.apellido1,\n    apellido2: this.apellido2,\n    edad: this.edad,\n    email: this.email,\n    telefono: this.telefono,\n    fechaNacimiento: this.fechaNacimiento,\n    ciudad: this.ciudad,\n    genero: this.genero,\n    terminos: this.terminos,\n\n    \n  });\n\n  constructor(private productService: ProductService) {}\n  ngOnInit(): void {}\n  Clic(formGroup: any) {\n    this.productService.sendProducts(\n      this.MyNewForm.value.nombre,\n      this.MyNewForm.value.apellido1,\n      this.MyNewForm.value.apellido2,\n      this.MyNewForm.value.edad,\n      this.MyNewForm.value.email,\n      this.MyNewForm.value.telefono,\n      this.MyNewForm.value.fechaNacimiento,\n      this.MyNewForm.value.ciudad,\n      this.MyNewForm.value.genero\n    );\n    console.log(formGroup);\n  }\n}\nexport interface Product {\n  nombre: string;\n  apellido1: string;\n  apellido2: string;\n  edad: number;\n  email: string;\n  telefono: number;\n  fechaNacimiento: Date;\n  ciudad: string;\n  genero: string;\n}\n\n// ngOnInit(){}\n// constructor(){}\n// constructor(private FormService:formService){}\n// Clic(Dato:FormGroup) {\n\n//  console.log(Dato);\n\n//   }\n\n// }\n// import { Component, OnInit } from '@angular/core';\n// import { FormGroup, FormControl, Validators } from '@angular/forms';\n// import { FormService } from '../../services/formServices';\n\n// @Component({\n//   selector: 'app-body',\n//   templateUrl: './body.component.html',\n//   styleUrls: ['./body.component.css']\n// })\n// export class BodyComponent implements OnInit {\n//   MyNewForm: FormGroup;\n//   products:Product[] = [ ];\n//   productName:string = \"\";\n//   productPrice:string = \"\";\n//   constructor(private formService: FormService) {\n//     this.MyNewForm = new FormGroup({\n//       nombre: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       apellido1: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       apellido2: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       edad: new FormControl('', [Validators.required, Validators.min(18), Validators.max(100)]),\n//       email: new FormControl('', [Validators.required, Validators.email]),\n//       telefono: new FormControl('', [Validators.required, Validators.minLength(9), Validators.maxLength(9), Validators.pattern('[0-9]*')]),\n//       fechaNacimiento: new FormControl('', [Validators.required, Validators.pattern('[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}')]),\n//       ciudad: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       genero: new FormControl('', [Validators.required])\n//     });\n//   }\n\n//   ngOnInit() {\n//     // Aqu√≠ puedes inicializar propiedades o llamar a servicios\n//   }\n\n//   Clic(formGroup: any) {\n//     this.formService.sendFormData(formGroup);\n//     console.log(formGroup);\n//   }\n// }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}