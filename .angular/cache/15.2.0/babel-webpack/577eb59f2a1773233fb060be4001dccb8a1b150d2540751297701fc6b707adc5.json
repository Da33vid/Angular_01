{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/productServices\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction BodyComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" El campo nombre es invalido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BodyComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" El campo apellido uno esta vacio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BodyComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" El campo apellido dos esta vacio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BodyComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" El campo edad esta vacio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BodyComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" El campo email esta vacio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BodyComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" El campo telefono esta vacio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BodyComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" El campo fecha de nacimiento esta vacio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BodyComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" El campo ciudad esta vacio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BodyComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" El campo genero esta vacio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BodyComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Hay que aceptar los terminos y condiciones \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class BodyComponent {\n  constructor(productService) {\n    this.productService = productService;\n    this.products = [];\n    this.productnombre = '';\n    this.productapellido1 = '';\n    this.productapellido2 = '';\n    this.productedad = 0;\n    this.productemail = '';\n    this.producttelefono = 0;\n    this.productfechaNacimiento = new Date();\n    this.productciudad = '';\n    this.productgenero = '';\n    this.nombre = new FormControl('', [Validators.required, Validators.maxLength(15)]);\n    this.apellido1 = new FormControl('', [Validators.required, Validators.maxLength(15)]);\n    this.apellido2 = new FormControl('', [Validators.required, Validators.maxLength(15)]);\n    this.edad = new FormControl('', [Validators.required]);\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.telefono = new FormControl('', [Validators.required]);\n    this.fechaNacimiento = new FormControl('', [Validators.required]);\n    this.ciudad = new FormControl('', [Validators.required, Validators.maxLength(15)]);\n    this.genero = new FormControl('', [Validators.required]);\n    this.terminos = new FormControl('', [Validators.required]);\n    this.MyNewForm = new FormGroup({\n      nombre: this.nombre,\n      apellido1: this.apellido1,\n      apellido2: this.apellido2,\n      edad: this.edad,\n      email: this.email,\n      telefono: this.telefono,\n      fechaNacimiento: this.fechaNacimiento,\n      ciudad: this.ciudad,\n      genero: this.genero,\n      terminos: this.terminos\n    });\n  }\n  ngOnInit() {}\n  Clic(formGroup) {\n    this.productService.sendProducts(this.MyNewForm.value.nombre, this.MyNewForm.value.apellido1, this.MyNewForm.value.apellido2, this.MyNewForm.value.edad, this.MyNewForm.value.email, this.MyNewForm.value.telefono, this.MyNewForm.value.fechaNacimiento, this.MyNewForm.value.ciudad, this.MyNewForm.value.genero);\n    console.log(formGroup);\n  }\n}\nBodyComponent.ɵfac = function BodyComponent_Factory(t) {\n  return new (t || BodyComponent)(i0.ɵɵdirectiveInject(i1.ProductService));\n};\nBodyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BodyComponent,\n  selectors: [[\"app-body\"]],\n  decls: 73,\n  vars: 12,\n  consts: [[1, \"d-flex\", \"justify-content-center\", \"align-items-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [\"type\", \"text\", \"name\", \"nombre\", \"formControlName\", \"nombre\", \"placeholder\", \"\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"apellido1\", \"formControlName\", \"apellido1\", \"placeholder\", \"apellido1\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"apellido2\", \"formControlName\", \"apellido2\", \"placeholder\", \"apellido2\", 1, \"form-control\"], [\"type\", \"number\", \"name\", \"edad\", \"formControlName\", \"edad\", \"placeholder\", \"Edad\", 1, \"form-control\"], [\"type\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"\", 1, \"form-control\"], [\"type\", \"number\", \"name\", \"telefono\", \"formControlName\", \"telefono\", \"placeholder\", \"telefono\", 1, \"form-control\"], [\"type\", \"date\", \"name\", \"fechaNacimiento\", \"formControlName\", \"fechaNacimiento\", 1, \"form-control\"], [\"type\", \"city\", \"name\", \"ciudad\", \"formControlName\", \"ciudad\", \"placeholder\", \"Ciudad\", 1, \"form-control\"], [1, \"invalid-feedback\"], [\"name\", \"genero\", \"formControlName\", \"genero\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"masculino\"], [\"value\", \"femenino\"], [\"value\", \"no_binario\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"name\", \"terminos\", \"formControlName\", \"terminos\", \"id\", \"defaultCheck1\", \"required\", \"\", 1, \"form-check-input\"], [\"for\", \"defaultCheck1\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"ms-3\", \"btn\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"]],\n  template: function BodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function BodyComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.Clic(ctx.MyNewForm.value);\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"span\", 4);\n      i0.ɵɵtext(5, \"Nombre\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, BodyComponent_div_7_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 3)(10, \"span\", 4);\n      i0.ɵɵtext(11, \"Primer Apellido\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, BodyComponent_div_13_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"div\", 3)(16, \"span\", 4);\n      i0.ɵɵtext(17, \"Apellido2\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, BodyComponent_div_19_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(20, \"div\", 2)(21, \"div\", 3)(22, \"span\", 4);\n      i0.ɵɵtext(23, \"Edad\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(24, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, BodyComponent_div_25_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(26, \"div\", 2)(27, \"div\", 3)(28, \"span\", 4);\n      i0.ɵɵtext(29, \"Email\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(30, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, BodyComponent_div_31_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(32, \"div\", 2)(33, \"div\", 3)(34, \"span\", 4);\n      i0.ɵɵtext(35, \"Telefono\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(36, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(37, BodyComponent_div_37_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(38, \"div\", 2)(39, \"div\", 3)(40, \"span\", 4);\n      i0.ɵɵtext(41, \"Fecha de nacimiento\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(42, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(43, BodyComponent_div_43_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(44, \"div\", 2)(45, \"div\", 3)(46, \"span\", 4);\n      i0.ɵɵtext(47, \"Ciudad\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(48, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(49, BodyComponent_div_49_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(50, \"div\", 14);\n      i0.ɵɵtext(51, \"Por favor, ingrese una ciudad v\\u00E1lida.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"div\", 2)(53, \"div\", 3)(54, \"span\", 4);\n      i0.ɵɵtext(55, \"G\\u00C9NERO\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(56, \"select\", 15)(57, \"option\", 16);\n      i0.ɵɵtext(58, \"Seleccione una opci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"option\", 17);\n      i0.ɵɵtext(60, \"Masculino\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"option\", 18);\n      i0.ɵɵtext(62, \"Femenino\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"option\", 19);\n      i0.ɵɵtext(64, \"Otros\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(65, BodyComponent_div_65_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(66, \"div\", 20);\n      i0.ɵɵelement(67, \"input\", 21);\n      i0.ɵɵelementStart(68, \"label\", 22);\n      i0.ɵɵtext(69, \" Acepto los terminos y condiciones\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(70, BodyComponent_div_70_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(71, \"button\", 23);\n      i0.ɵɵtext(72, \" Enviar \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.MyNewForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.nombre.invalid && ctx.nombre.touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.apellido1.invalid && ctx.apellido1.touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.apellido2.invalid && ctx.apellido2.touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.edad.invalid && ctx.edad.touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && ctx.email.touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.telefono.invalid && ctx.telefono.touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.fechaNacimiento.invalid && ctx.fechaNacimiento.touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.ciudad.invalid && ctx.ciudad.touched);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngIf\", ctx.genero.invalid && ctx.genero.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.terminos.invalid && ctx.terminos.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.MyNewForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.CheckboxRequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"body[_ngcontent-%COMP%]{\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    margin: 0;\\r\\n    background-color: #e9d8a6;\\r\\n    padding: 15px;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]{\\r\\n    background-color: #ae2012;\\r\\n    color: #ffffff;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYm9keS9ib2R5L2JvZHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLE1BQU07SUFDTixPQUFPO0lBQ1AsU0FBUztJQUNULHlCQUF5QjtJQUN6QixhQUFhO0FBQ2pCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsY0FBYztBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZDhhNjtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuYnV0dG9ue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2FlMjAxMjtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","BodyComponent","constructor","productService","Date","required","maxLength","email","nombre","apellido1","apellido2","edad","telefono","fechaNacimiento","ciudad","genero","terminos","ngOnInit","Clic","formGroup","sendProducts","MyNewForm","value","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\M6 - Desenvolupament Web en Entorn Client\\angular practica2\\practica02\\src\\app\\body\\body\\body.component.ts","E:\\M6 - Desenvolupament Web en Entorn Client\\angular practica2\\practica02\\src\\app\\body\\body\\body.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../../services/productServices';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css'],\n})\nexport class BodyComponent implements OnInit {\n\n\n  \n  products: Product[] = [];\n  productnombre: string = '';\n  productapellido1: string = '';\n  productapellido2: string = '';\n  productedad: number = 0;\n  productemail: string = '';\n  producttelefono: number = 0;\n  productfechaNacimiento: Date = new Date();\n  productciudad: string = '';\n  productgenero: string = '';\n\n  nombre: FormControl = new FormControl('', [\n\n   Validators.required,\n    Validators.maxLength(15)\n  ]);\n  apellido1: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(15)\n  ]);\n  apellido2: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(15)\n\n  ]);\n  edad: FormControl = new FormControl('', [\n    Validators.required    \n  ]);\n  email: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.email\n  ]);\n  telefono: FormControl = new FormControl('', [\n    Validators.required,\n  \n\n  ]);\n  fechaNacimiento: FormControl = new FormControl('', [\n    Validators.required\n    \n  ]);\n  ciudad: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(15)\n  ]);\n  genero: FormControl = new FormControl('', [Validators.required]);\n  terminos: FormControl = new FormControl('', [Validators.required]);\n\n\n  MyNewForm: FormGroup = new FormGroup({\n    nombre: this.nombre,\n    apellido1: this.apellido1,\n    apellido2: this.apellido2,\n    edad: this.edad,\n    email: this.email,\n    telefono: this.telefono,\n    fechaNacimiento: this.fechaNacimiento,\n    ciudad: this.ciudad,\n    genero: this.genero,\n    terminos: this.terminos,\n\n    \n  });\n\n  constructor(private productService: ProductService) {}\n  ngOnInit(): void {}\n  Clic(formGroup: any) {\n    this.productService.sendProducts(\n      this.MyNewForm.value.nombre,\n      this.MyNewForm.value.apellido1,\n      this.MyNewForm.value.apellido2,\n      this.MyNewForm.value.edad,\n      this.MyNewForm.value.email,\n      this.MyNewForm.value.telefono,\n      this.MyNewForm.value.fechaNacimiento,\n      this.MyNewForm.value.ciudad,\n      this.MyNewForm.value.genero\n    );\n    console.log(formGroup);\n  }\n}\nexport interface Product {\n  nombre: string;\n  apellido1: string;\n  apellido2: string;\n  edad: number;\n  email: string;\n  telefono: number;\n  fechaNacimiento: Date;\n  ciudad: string;\n  genero: string;\n}\n\n// ngOnInit(){}\n// constructor(){}\n// constructor(private FormService:formService){}\n// Clic(Dato:FormGroup) {\n\n//  console.log(Dato);\n\n//   }\n\n// }\n// import { Component, OnInit } from '@angular/core';\n// import { FormGroup, FormControl, Validators } from '@angular/forms';\n// import { FormService } from '../../services/formServices';\n\n// @Component({\n//   selector: 'app-body',\n//   templateUrl: './body.component.html',\n//   styleUrls: ['./body.component.css']\n// })\n// export class BodyComponent implements OnInit {\n//   MyNewForm: FormGroup;\n//   products:Product[] = [ ];\n//   productName:string = \"\";\n//   productPrice:string = \"\";\n//   constructor(private formService: FormService) {\n//     this.MyNewForm = new FormGroup({\n//       nombre: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       apellido1: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       apellido2: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       edad: new FormControl('', [Validators.required, Validators.min(18), Validators.max(100)]),\n//       email: new FormControl('', [Validators.required, Validators.email]),\n//       telefono: new FormControl('', [Validators.required, Validators.minLength(9), Validators.maxLength(9), Validators.pattern('[0-9]*')]),\n//       fechaNacimiento: new FormControl('', [Validators.required, Validators.pattern('[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}')]),\n//       ciudad: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n//       genero: new FormControl('', [Validators.required])\n//     });\n//   }\n\n//   ngOnInit() {\n//     // Aquí puedes inicializar propiedades o llamar a servicios\n//   }\n\n//   Clic(formGroup: any) {\n//     this.formService.sendFormData(formGroup);\n//     console.log(formGroup);\n//   }\n// }\n","<body class=\"d-flex justify-content-center align-items-center\">\r\n  <form [formGroup]=\"MyNewForm\" (ngSubmit)=\"Clic(MyNewForm.value)\">\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">Nombre</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        name=\"nombre\"\r\n        formControlName=\"nombre\"\r\n        placeholder\r\n      />\r\n    </div>\r\n    <div *ngIf=\"nombre.invalid && nombre.touched\" class=\"alert alert-danger\">\r\n      El campo nombre es invalido\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">Primer Apellido</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        name=\"apellido1\"\r\n        formControlName=\"apellido1\"\r\n        placeholder=\"apellido1\"\r\n      />\r\n    </div>\r\n    <div *ngIf=\"apellido1.invalid && apellido1.touched\" class=\"alert alert-danger\">\r\n      El campo apellido uno esta vacio\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">Apellido2</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        name=\"apellido2\"\r\n        formControlName=\"apellido2\"\r\n        placeholder=\"apellido2\"\r\n      />\r\n    </div>\r\n    <div *ngIf=\"apellido2.invalid && apellido2.touched\" class=\"alert alert-danger\">\r\n      El campo apellido dos esta vacio\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">Edad</span>\r\n      </div>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control\"\r\n        name=\"edad\"\r\n        formControlName=\"edad\"\r\n        placeholder=\"Edad\"\r\n      />\r\n    </div>\r\n    <div *ngIf=\"edad.invalid && edad.touched\" class=\"alert alert-danger\">\r\n      El campo edad esta vacio\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">Email</span>\r\n      </div>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        name=\"email\"\r\n        formControlName=\"email\"\r\n        placeholder\r\n      />\r\n    </div>\r\n    <div *ngIf=\"email.invalid && email.touched\" class=\"alert alert-danger\">\r\n      El campo email esta vacio\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">Telefono</span>\r\n      </div>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control\"\r\n        name=\"telefono\"\r\n        formControlName=\"telefono\"\r\n        placeholder=\"telefono\"\r\n      />\r\n    </div>\r\n    <div *ngIf=\"telefono.invalid && telefono.touched\" class=\"alert alert-danger\">\r\n      El campo telefono esta vacio\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">Fecha de nacimiento</span>\r\n      </div>\r\n      <input\r\n        type=\"date\"\r\n        class=\"form-control\"\r\n        name=\"fechaNacimiento\"\r\n        formControlName=\"fechaNacimiento\"\r\n      />\r\n    </div>\r\n    <div *ngIf=\"fechaNacimiento.invalid && fechaNacimiento.touched\" class=\"alert alert-danger\">\r\n      El campo fecha de nacimiento esta vacio\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">Ciudad</span>\r\n      </div>\r\n      <input\r\n        type=\"city\"\r\n        class=\"form-control\"\r\n        name=\"ciudad\"\r\n        formControlName=\"ciudad\"\r\n        placeholder=\"Ciudad\"\r\n      />\r\n    </div>\r\n    <div *ngIf=\"ciudad.invalid && ciudad.touched\" class=\"alert alert-danger\">\r\n      El campo ciudad esta vacio\r\n    </div>\r\n\r\n    <div class=\"invalid-feedback\">Por favor, ingrese una ciudad válida.</div>\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">GÉNERO</span>\r\n      </div>\r\n      <select class=\"form-control\" name=\"genero\" formControlName=\"genero\">\r\n        <option value=\"\">Seleccione una opción</option>\r\n        <option value=\"masculino\">Masculino</option>\r\n        <option value=\"femenino\">Femenino</option>\r\n        <option value=\"no_binario\">Otros</option>\r\n      </select>\r\n    </div>\r\n    <div *ngIf=\"genero.invalid && genero.touched\" class=\"alert alert-danger\">\r\n      El campo genero esta vacio\r\n    </div>\r\n    <div class=\"form-check\">\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        name=\"terminos\"\r\n        formControlName=\"terminos\"\r\n        id=\"defaultCheck1\"\r\n        required\r\n      />\r\n      <label class=\"form-check-label\" for=\"defaultCheck1\" >\r\n        Acepto los terminos y condiciones</label\r\n      >\r\n    </div>\r\n    <div *ngIf=\"terminos.invalid && terminos.touched\" class=\"alert alert-danger\">\r\n      Hay que aceptar los terminos y condiciones\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"ms-3 btn\" [disabled]=\"MyNewForm.invalid\">\r\n      Enviar\r\n    </button>\r\n  </form>\r\n</body>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}